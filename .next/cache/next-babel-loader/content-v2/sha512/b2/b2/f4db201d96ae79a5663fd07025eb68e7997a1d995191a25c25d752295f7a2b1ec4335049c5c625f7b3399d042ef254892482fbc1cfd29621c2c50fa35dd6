{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\";\nconst middleware = [thunk];\nimport rootReducer from './reducers/index';\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store; // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["/var/www/lilyweb-agency-2021/redux/store.ts"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","middleware","rootReducer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,MAAMC,UAAU,GAAG,CAACD,KAAD,CAAnB;AACA,OAAOE,WAAP,MAAwB,kBAAxB;AAEA,MAAMC,KAAK,GAAIN,WAAW,CACxBK,WADwB,EAExBH,mBAAmB,CAACD,eAAe,CAAC,GAAGG,UAAJ,CAAhB,CAFK,CAA1B;AAKA,eAAeE,KAAf,C,CAEA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';  \nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\";\nconst middleware = [thunk];\nimport rootReducer from './reducers/index';  \n  \nconst store =  createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>"]},"metadata":{},"sourceType":"module"}